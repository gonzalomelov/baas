
package uy.com.group05.baascore.sl.services.soap;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import uy.com.group05.baascore.sl.services.impl.PermissionServices;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.4.6
 * 2013-11-09T15:52:37.510-02:00
 * Generated source version: 2.4.6
 * 
 */
public final class PermissionServices_PermissionServicesPort_Client {

    private static final QName SERVICE_NAME = new QName("http://impl.services.sl.baascore.group05.com.uy/", "PermissionServices");

    private PermissionServices_PermissionServicesPort_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = PermissionServices.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        PermissionServices ss = new PermissionServices(wsdlURL, SERVICE_NAME);
        PermissionServices port = ss.getPermissionServicesPort();  
        
        {
        System.out.println("Invoking assingPermissionRole...");
        long _assingPermissionRole_idUser = 7266611072813598860l;
        long _assingPermissionRole_idApp = -4395280803339657893l;
        long _assingPermissionRole_idRole = -9063921643918671841l;
        java.util.List<uy.com.group05.baascore.sl.services.soap.PermissionEntityDTO> _assingPermissionRole_permEntities = new java.util.ArrayList<uy.com.group05.baascore.sl.services.soap.PermissionEntityDTO>();
        uy.com.group05.baascore.sl.services.soap.PermissionEntityDTO _assingPermissionRole_permEntitiesVal1 = new uy.com.group05.baascore.sl.services.soap.PermissionEntityDTO();
        _assingPermissionRole_permEntitiesVal1.setHas(false);
        _assingPermissionRole_permEntitiesVal1.setIdEntity(-9134055791631520430l);
        _assingPermissionRole_permEntitiesVal1.setIdOperation(8675470204953961491l);
        _assingPermissionRole_permEntities.add(_assingPermissionRole_permEntitiesVal1);
        try {
            boolean _assingPermissionRole__return = port.assingPermissionRole(_assingPermissionRole_idUser, _assingPermissionRole_idApp, _assingPermissionRole_idRole, _assingPermissionRole_permEntities);
            System.out.println("assingPermissionRole.result=" + _assingPermissionRole__return);

        } catch (RoleNotRegisteredException_Exception e) { 
            System.out.println("Expected exception: RoleNotRegisteredException has occurred.");
            System.out.println(e.toString());
        } catch (UserCantAccessAppException_Exception e) { 
            System.out.println("Expected exception: UserCantAccessAppException has occurred.");
            System.out.println(e.toString());
        } catch (AppNotRegisteredException_Exception e) { 
            System.out.println("Expected exception: AppNotRegisteredException has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking assingPermissionEntity...");
        long _assingPermissionEntity_idUser = -2574151067387392564l;
        long _assingPermissionEntity_idApp = -4017521143527982989l;
        long _assingPermissionEntity_idEntity = 1387760790918181295l;
        java.util.List<uy.com.group05.baascore.sl.services.soap.PermissionRoleDTO> _assingPermissionEntity_permRoles = new java.util.ArrayList<uy.com.group05.baascore.sl.services.soap.PermissionRoleDTO>();
        uy.com.group05.baascore.sl.services.soap.PermissionRoleDTO _assingPermissionEntity_permRolesVal1 = new uy.com.group05.baascore.sl.services.soap.PermissionRoleDTO();
        _assingPermissionEntity_permRolesVal1.setHas(false);
        _assingPermissionEntity_permRolesVal1.setIdOperation(-1578100917836191258l);
        _assingPermissionEntity_permRolesVal1.setIdRole(602815929308523859l);
        _assingPermissionEntity_permRoles.add(_assingPermissionEntity_permRolesVal1);
        try {
            boolean _assingPermissionEntity__return = port.assingPermissionEntity(_assingPermissionEntity_idUser, _assingPermissionEntity_idApp, _assingPermissionEntity_idEntity, _assingPermissionEntity_permRoles);
            System.out.println("assingPermissionEntity.result=" + _assingPermissionEntity__return);

        } catch (EntityNotRegisteredException_Exception e) { 
            System.out.println("Expected exception: EntityNotRegisteredException has occurred.");
            System.out.println(e.toString());
        } catch (UserCantAccessAppException_Exception e) { 
            System.out.println("Expected exception: UserCantAccessAppException has occurred.");
            System.out.println(e.toString());
        } catch (AppNotRegisteredException_Exception e) { 
            System.out.println("Expected exception: AppNotRegisteredException has occurred.");
            System.out.println(e.toString());
        }
            }

        System.exit(0);
    }

}
