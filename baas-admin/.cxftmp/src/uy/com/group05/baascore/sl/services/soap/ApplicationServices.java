package uy.com.group05.baascore.sl.services.soap;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.4.6
 * 2013-11-03T12:30:40.723-02:00
 * Generated source version: 2.4.6
 * 
 */
@WebService(targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", name = "ApplicationServices")
@XmlSeeAlso({ObjectFactory.class})
public interface ApplicationServices {

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "addPushChannelToApplication", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.AddPushChannelToApplication")
    @WebMethod
    @ResponseWrapper(localName = "addPushChannelToApplicationResponse", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.AddPushChannelToApplicationResponse")
    public long addPushChannelToApplication(
        @WebParam(name = "idApp", targetNamespace = "")
        long idApp,
        @WebParam(name = "nombreCanal", targetNamespace = "")
        java.lang.String nombreCanal
    ) throws PushChanAlreadyRegisteredException_Exception, AppNotRegisteredException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "createApplication", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.CreateApplication")
    @WebMethod
    @ResponseWrapper(localName = "createApplicationResponse", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.CreateApplicationResponse")
    public long createApplication(
        @WebParam(name = "idUser", targetNamespace = "")
        long idUser,
        @WebParam(name = "nombreApp", targetNamespace = "")
        java.lang.String nombreApp,
        @WebParam(name = "rolStr", targetNamespace = "")
        java.util.List<java.lang.String> rolStr,
        @WebParam(name = "entidadStr", targetNamespace = "")
        java.util.List<java.lang.String> entidadStr
    ) throws NombreAppAlreadyRegisteredException_Exception, MongoDBAlreadyExistsException_Exception, EntityCollectionAlreadyExistsException_Exception, InvalidNameException_Exception, UserNotRegisteredException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "editApplication", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.EditApplication")
    @WebMethod
    @ResponseWrapper(localName = "editApplicationResponse", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.EditApplicationResponse")
    public long editApplication(
        @WebParam(name = "nombreApp", targetNamespace = "")
        java.lang.String nombreApp,
        @WebParam(name = "rolStr", targetNamespace = "")
        java.util.List<java.lang.String> rolStr,
        @WebParam(name = "entidadStr", targetNamespace = "")
        java.util.List<java.lang.String> entidadStr
    ) throws MongoDBAlreadyExistsException_Exception, EntityCollectionAlreadyExistsException_Exception, AppNotRegisteredException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "removePushChannelFromApplication", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.RemovePushChannelFromApplication")
    @WebMethod
    @ResponseWrapper(localName = "removePushChannelFromApplicationResponse", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.RemovePushChannelFromApplicationResponse")
    public long removePushChannelFromApplication(
        @WebParam(name = "idApp", targetNamespace = "")
        long idApp,
        @WebParam(name = "idCanal", targetNamespace = "")
        long idCanal
    ) throws PushChanNotRegisteredException_Exception, AppNotRegisteredException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "listApplications", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.ListApplications")
    @WebMethod
    @ResponseWrapper(localName = "listApplicationsResponse", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.ListApplicationsResponse")
    public java.util.List<uy.com.group05.baascore.sl.services.soap.SimpleApplicationDTO> listApplications(
        @WebParam(name = "idUser", targetNamespace = "")
        long idUser
    ) throws UserNotRegisteredException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getPermissionsForEntity", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.GetPermissionsForEntity")
    @WebMethod
    @ResponseWrapper(localName = "getPermissionsForEntityResponse", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.GetPermissionsForEntityResponse")
    public java.util.List<uy.com.group05.baascore.sl.services.soap.PermissionDTO> getPermissionsForEntity(
        @WebParam(name = "appId", targetNamespace = "")
        long appId,
        @WebParam(name = "entityId", targetNamespace = "")
        long entityId
    ) throws EntityCollectionNotRegisteredException_Exception, AppNotRegisteredException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getPushChannelsApplication", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.GetPushChannelsApplication")
    @WebMethod
    @ResponseWrapper(localName = "getPushChannelsApplicationResponse", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.GetPushChannelsApplicationResponse")
    public java.util.List<uy.com.group05.baascore.sl.services.soap.SimplePushChannelDTO> getPushChannelsApplication(
        @WebParam(name = "idApp", targetNamespace = "")
        long idApp
    ) throws AppNotRegisteredException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "editRoleApplication", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.EditRoleApplication")
    @WebMethod
    @ResponseWrapper(localName = "editRoleApplicationResponse", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.EditRoleApplicationResponse")
    public long editRoleApplication(
        @WebParam(name = "idApp", targetNamespace = "")
        long idApp,
        @WebParam(name = "idUser", targetNamespace = "")
        long idUser,
        @WebParam(name = "nomRole", targetNamespace = "")
        java.lang.String nomRole
    ) throws RoleAlreadyRegisteredException_Exception, InvalidNameException_Exception, UserCantAccessAppException_Exception, AppNotRegisteredException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getEntitiesApplication", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.GetEntitiesApplication")
    @WebMethod
    @ResponseWrapper(localName = "getEntitiesApplicationResponse", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.GetEntitiesApplicationResponse")
    public java.util.List<uy.com.group05.baascore.sl.services.soap.EntityDTO> getEntitiesApplication(
        @WebParam(name = "idApp", targetNamespace = "")
        long idApp
    ) throws AppNotRegisteredException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getClientsApplication", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.GetClientsApplication")
    @WebMethod
    @ResponseWrapper(localName = "getClientsApplicationResponse", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.GetClientsApplicationResponse")
    public java.util.List<uy.com.group05.baascore.sl.services.soap.ClientDTO> getClientsApplication(
        @WebParam(name = "idApp", targetNamespace = "")
        long idApp
    ) throws AppNotRegisteredException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getRolesApplication", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.GetRolesApplication")
    @WebMethod
    @ResponseWrapper(localName = "getRolesApplicationResponse", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.GetRolesApplicationResponse")
    public java.util.List<uy.com.group05.baascore.sl.services.soap.RoleDTO> getRolesApplication(
        @WebParam(name = "idApp", targetNamespace = "")
        long idApp
    ) throws AppNotRegisteredException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "assignUserToApplication", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.AssignUserToApplication")
    @WebMethod
    @ResponseWrapper(localName = "assignUserToApplicationResponse", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.AssignUserToApplicationResponse")
    public boolean assignUserToApplication(
        @WebParam(name = "idApp", targetNamespace = "")
        long idApp,
        @WebParam(name = "idUser", targetNamespace = "")
        long idUser
    ) throws AppNotRegisteredException_Exception, UserNotRegisteredException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getApplication", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.GetApplication")
    @WebMethod
    @ResponseWrapper(localName = "getApplicationResponse", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.GetApplicationResponse")
    public uy.com.group05.baascore.sl.services.soap.ApplicationDTO getApplication(
        @WebParam(name = "idApp", targetNamespace = "")
        long idApp
    ) throws AppNotRegisteredException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "existsApplication", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.ExistsApplication")
    @WebMethod
    @ResponseWrapper(localName = "existsApplicationResponse", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.ExistsApplicationResponse")
    public boolean existsApplication(
        @WebParam(name = "nombreApp", targetNamespace = "")
        java.lang.String nombreApp
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "existsEntityApplication", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.ExistsEntityApplication")
    @WebMethod
    @ResponseWrapper(localName = "existsEntityApplicationResponse", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.ExistsEntityApplicationResponse")
    public boolean existsEntityApplication(
        @WebParam(name = "idApp", targetNamespace = "")
        long idApp,
        @WebParam(name = "nomEntity", targetNamespace = "")
        java.lang.String nomEntity
    ) throws AppNotRegisteredException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "existsRoleApplication", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.ExistsRoleApplication")
    @WebMethod
    @ResponseWrapper(localName = "existsRoleApplicationResponse", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.ExistsRoleApplicationResponse")
    public boolean existsRoleApplication(
        @WebParam(name = "idApp", targetNamespace = "")
        long idApp,
        @WebParam(name = "nomRole", targetNamespace = "")
        java.lang.String nomRole
    ) throws AppNotRegisteredException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "existsPushChannelApplication", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.ExistsPushChannelApplication")
    @WebMethod
    @ResponseWrapper(localName = "existsPushChannelApplicationResponse", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.ExistsPushChannelApplicationResponse")
    public boolean existsPushChannelApplication(
        @WebParam(name = "idApp", targetNamespace = "")
        long idApp,
        @WebParam(name = "nombreCanal", targetNamespace = "")
        java.lang.String nombreCanal
    ) throws AppNotRegisteredException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "unassignUserFromApplication", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.UnassignUserFromApplication")
    @WebMethod
    @ResponseWrapper(localName = "unassignUserFromApplicationResponse", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.UnassignUserFromApplicationResponse")
    public boolean unassignUserFromApplication(
        @WebParam(name = "idApp", targetNamespace = "")
        long idApp,
        @WebParam(name = "idUser", targetNamespace = "")
        long idUser
    ) throws AppNotRegisteredException_Exception, UserNotRegisteredException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getChartsValues", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.GetChartsValues")
    @WebMethod
    @ResponseWrapper(localName = "getChartsValuesResponse", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.GetChartsValuesResponse")
    public uy.com.group05.baascore.sl.services.soap.ChartDto getChartsValues(
        @WebParam(name = "idApp", targetNamespace = "")
        long idApp
    ) throws AppNotRegisteredException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "editEntityApplication", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.EditEntityApplication")
    @WebMethod
    @ResponseWrapper(localName = "editEntityApplicationResponse", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.EditEntityApplicationResponse")
    public long editEntityApplication(
        @WebParam(name = "idApp", targetNamespace = "")
        long idApp,
        @WebParam(name = "idUser", targetNamespace = "")
        long idUser,
        @WebParam(name = "nomEntity", targetNamespace = "")
        java.lang.String nomEntity
    ) throws EntityAlreadyRegisteredException_Exception, EntityCollectionAlreadyExistsException_Exception, InvalidNameException_Exception, UserCantAccessAppException_Exception, AppNotRegisteredException_Exception;
}
