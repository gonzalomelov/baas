package uy.com.group05.baascore.sl.services.soap;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.4.6
 * 2013-10-06T16:24:20.528-02:00
 * Generated source version: 2.4.6
 * 
 */
@WebService(targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", name = "ApplicationServices")
@XmlSeeAlso({ObjectFactory.class})
public interface ApplicationServices {

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "createApplication", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.CreateApplication")
    @WebMethod
    @ResponseWrapper(localName = "createApplicationResponse", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.CreateApplicationResponse")
    public long createApplication(
        @WebParam(name = "idUser", targetNamespace = "")
        long idUser,
        @WebParam(name = "nombreApp", targetNamespace = "")
        java.lang.String nombreApp,
        @WebParam(name = "rolStr", targetNamespace = "")
        java.util.List<java.lang.String> rolStr,
        @WebParam(name = "entidadStr", targetNamespace = "")
        java.util.List<java.lang.String> entidadStr
    ) throws NombreAppAlreadyRegisteredException_Exception, MongoDBAlreadyExistsException_Exception, EntityCollectionAlreadyExistsException_Exception, UserNotRegisteredException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "listApplications", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.ListApplications")
    @WebMethod
    @ResponseWrapper(localName = "listApplicationsResponse", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.ListApplicationsResponse")
    public java.util.List<uy.com.group05.baascore.sl.services.soap.ApplicationDTO> listApplications(
        @WebParam(name = "idUser", targetNamespace = "")
        long idUser
    ) throws UserNotRegisteredException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "existsApplication", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.ExistsApplication")
    @WebMethod
    @ResponseWrapper(localName = "existsApplicationResponse", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.ExistsApplicationResponse")
    public boolean existsApplication(
        @WebParam(name = "nombreApp", targetNamespace = "")
        java.lang.String nombreApp
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "existsEntityApplication", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.ExistsEntityApplication")
    @WebMethod
    @ResponseWrapper(localName = "existsEntityApplicationResponse", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.ExistsEntityApplicationResponse")
    public boolean existsEntityApplication(
        @WebParam(name = "nomApp", targetNamespace = "")
        java.lang.String nomApp,
        @WebParam(name = "nomEntity", targetNamespace = "")
        java.lang.String nomEntity
    ) throws AppNotRegisteredException_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "existsRoleApplication", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.ExistsRoleApplication")
    @WebMethod
    @ResponseWrapper(localName = "existsRoleApplicationResponse", targetNamespace = "http://soap.services.sl.baascore.group05.com.uy/", className = "uy.com.group05.baascore.sl.services.soap.ExistsRoleApplicationResponse")
    public boolean existsRoleApplication(
        @WebParam(name = "nomApp", targetNamespace = "")
        java.lang.String nomApp,
        @WebParam(name = "nomRole", targetNamespace = "")
        java.lang.String nomRole
    ) throws AppNotRegisteredException_Exception;
}
